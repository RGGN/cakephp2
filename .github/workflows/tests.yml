name: Tests

on:
  push:
    branches:
      - '2.x'
  pull_request:
    branches:
      - '*'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  testsuite:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.0
        db-type:
          - mysql
          - mysql57
          - sqlite
    #        include:
    #          - php-version: '7.4'
    #            db-type: 'mysql'
    #          - php-version: '8.1'
    #            db-type: 'mysql'
    #          - php-version: '8.2'
    #            db-type: 'mysql'

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      memcached:
        image: memcached
        ports:
          - 11211:11211

    env:
      DB: ${{ matrix.db-type }}

    steps:
      - name: Setup MySQL latest
        if: matrix.db-type == 'mysql'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin

      - name: Setup MySQL 5.7
        if: matrix.db-type == 'mysql57'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql:5.7 --character-set-server=utf8

      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy database.php config
        run: cp ./.github/workflows/configs/database.php ./app/Config/

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: apcu, memcache, memcached, redis, mcrypt, pdo_mysql, pdo_pgsql, pdo_sqlite
          ini-values: |
            assert.exception=1,
            zend.assertions=1,
            error_reporting=-1,
            log_errors_max_len=0,
            display_errors=On,
            apc.enable_cli=1
            tools: composer
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Get date part for cache key
        id: key-date
        run: echo "date=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: locale-gen
        run: |
          sudo locale-gen da_DK.UTF-8
          sudo locale-gen de_DE.UTF-8

      - name: Composer install
        run: |
          if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
            composer update --prefer-lowest --prefer-stable
          else
            composer update
          fi

      - name: Wait for MySQL
        if: matrix.db-type == 'mysql' || matrix.db-type == 'mysql57'
        run: while ! `mysqladmin ping -h 127.0.0.1 --silent`; do printf 'Waiting for MySQL...\n'; sleep 2; done;

      - name: Run PHPUnit
        env:
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
          MEMCACHED_PORT: ${{ job.services.memcached.ports['11211'] }}
        run: |
          if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export DB_URL='sqlite:///:memory:'; fi
          if [[ ${{ matrix.db-type }} == 'mysql57' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp'; fi
          if [[ ${{ matrix.db-type }} == 'mysql' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp?encoding=utf8'; fi
          if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export DB_URL='postgres://postgres:postgres@127.0.0.1/postgres'; fi

          if [[ ${{ matrix.php-version }} == '8.0' ]]; then
            export CODECOVERAGE=1
            vendor/bin/phpunit --verbose --coverage-clover=coverage.xml
            CAKE_TEST_AUTOQUOTE=1 vendor/bin/phpunit --verbose --testsuite=database
          else
            vendor/bin/phpunit
            CAKE_TEST_AUTOQUOTE=1 vendor/bin/phpunit --testsuite=database
          fi

      - name: Submit code coverage
        if: matrix.php-version == '8.0'
        uses: codecov/codecov-action@v3
